dist: bionic

language: python

os:
  - linux

services:
  - docker

cache:
  pip: true
  directories:
    - $HOME/.cache/pip

addons:
  apt:
    packages:
      - python3-pip
      - python3-setuptools
      - postgresql-client-common
      - postgresql-client-12

env:
  global:
    - PGUSER=docker
    - PGPASSWORD=Dyx8lXMKIGggiQXTzSrAuZ3UsDt8YmLy53WEIAga6EkkVc2GK9lmiRfJxzx7Oahw
    - PGDATABASE=gis
    - PGHOST=localhost
    - PGPORT=5432

before_script:
  # download openstreetmap-carto
  - git clone https://github.com/linuxluigi/openstreetmap-carto.git ../openstreetmap-carto
  # build docker images production
  - cp -r .envs/.local/ .envs/.production/
  - sudo docker-compose -f production.yml build
  # build docker images
  - sudo docker-compose -f local.yml build
  # download shape files
  - sudo docker-compose -f local.yml run --rm django /get-shapefiles.sh
  # generate style.xml
  - sudo docker-compose -f local.yml run --rm django python manage.py create_style_xml
  # start postgis, redis & celery
  - sudo docker-compose -f local.yml up -d postgres celerybeat celeryworker

install:
  # install docker-compose
  - pip3 install docker-compose wheel

script:
  # run typing check with mypy
  - sudo docker-compose -f local.yml run django coverage run -m mypy /app
  # run pytest
  - sudo docker-compose -f local.yml run django coverage run -m pytest
  # test clear up cache
  - sudo docker-compose -f local.yml run --rm django python manage.py clear_cache
  # code coverage upload to codacy
  - printf "\nCODACY_PROJECT_TOKEN=$CODACY_PROJECT_TOKEN" >> .envs/.local/.django
  - sudo docker-compose -f local.yml run django coverage xml
  - sudo docker-compose -f local.yml run django python-codacy-coverage -r coverage.xml
